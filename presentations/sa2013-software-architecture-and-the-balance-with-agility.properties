title=Software architecture and the balance with agility
slides=104
author=Simon Brown
date=10-Oct-2013
event=Software Architect 2013
city=London
country=England
pdf=true
video=
visible=true
summary=<p>The agile and software craftsmanship movements are helping to push up the quality of the software systems that we build. Together they are helping us to deliver better software that better meets the needs of the business while carefully managing time and budgetary constraints. But there's still more we can do because even a small amount of software architecture can help prevent many of the problems that projects face, particularly if the team seems to be more chaotic than they are self-organising. Successful software projects aren't just about good code and sometimes you need to step away from the IDE for a few moments to see the bigger picture. This session is about that bigger picture and is a practical, pragmatic and lightweight introduction to software architecture that is aimed at developers. You'll learn:</p><ul><li>The essence of software architecture.</li><li>Why the software architecture role should include coding, coaching and collaboration.</li><li>The things that you *really* need to think about before coding.</li><li>How to visualise your software architecture using simple NoUML sketches.</li><li>A lightweight approach to documenting your software.</li><li>Why there is *no* conflict between agile and architecture.</li><li>What "just enough" up front design means.</li><li>How to identify risks with risk-storming.</li></ul>
